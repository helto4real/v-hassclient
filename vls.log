[Trace - 14:38:28] Sending notification 'window/showMessage'.
Params: {"jsonrpc":"2.0","method":"window/showMessage","params":{"type":2,"message":"VLS is a work-in-progress, pre-alpha language server. It may not be guaranteed to work reliably due to memory issues and other related factors. We encourage you to submit an issue if you encounter any problems."}}

[Trace - 14:38:28] Received request 'initialize - (0)'.
Params: {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":3363,"clientInfo":{"name":"Visual Studio Code","version":"1.63.2"},"locale":"en","rootPath":"/workspaces/v-hassclient","rootUri":"file:///workspaces/v-hassclient","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":false},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false},"linkedEditingRange":{"dynamicRegistration":true}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"}}},"trace":"off","workspaceFolders":[{"uri":"file:///workspaces/v-hassclient","name":"v-hassclient"}]}}

[Trace - 14:38:28] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS Version: 0.0.1.8b9a431, OS: linux 64"}}

[Trace - 14:38:28] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS executable path: /home/git/vls/bin/vls"}}

[Trace - 14:38:28] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"VLS build with V 697eca5"}}

[Trace - 14:38:28] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Client / Editor: Visual Studio Code 1.63.2"}}

[Trace - 14:38:28] Sending notification 'window/logMessage'.
Params: {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"Using V path (VROOT): /opt/vlang"}}

[Trace - 14:38:29] Sending response 'initialize - (0)' took 165ms
Result: {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["=",".",":","{",",","("," "]},"signatureHelpProvider":{"triggerCharacters":["("],"retriggerCharacters":[","," "]},"definitionProvider":true,"typeDefinitionProvider":false,"implementationProvider":true,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":false,"codeLensProvider":{"resolveProvider":false},"documentFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"","moreTriggerCharacter":[]},"renameProvider":false,"documentLinkProvider":{"resolveProvider":false},"colorProvider":false,"declarationProvider":false,"executeCommandProvider":{"commands":[]},"foldingRangeProvider":true,"experimental":{}}}}

[Trace - 14:38:29] Received notification 'initialized'.
Params: {"jsonrpc":"2.0","method":"initialized","params":{}}

[Trace - 14:38:29] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","languageId":"v","version":1,"text":"module hassclient\r\n\r\nimport time\r\nimport x.json2\r\nimport json\r\n\r\npub struct HassState {\r\n\tlast_changed_str string [json: 'last_changed']\r\n\tlast_updated_str string [json: 'last_updated']\r\npub:\r\n\tentity_id  string\r\n\tstate      string\r\n\tattributes map[string]json2.Any\r\npub mut:\r\n\tlast_updated time.Time\r\n\tlast_changed time.Time\r\n}\r\n\r\nfn parse_hass_state(json json2.Any) ? HassState {\r\n\tmut mp := json.as_map()\r\n\r\n\tmut state := HassState{\r\n\t\tentity_id: mp['entity_id']?.str()\r\n\t\tstate: mp['state']?.str()\r\n\t\tattributes: mp['attributes']?.as_map()\r\n\t\tlast_changed_str: mp['last_changed']?.str()\r\n\t\tlast_updated_str: mp['last_updated']?.str()\r\n\t}\r\n\r\n\toffset := time.offset()\r\n\tlast_updated := time.parse_iso8601(state.last_updated_str) or { time.Time{} }\r\n\tstate.last_updated = last_updated.add_seconds(offset)\r\n\r\n\tlast_changed := time.parse_iso8601(state.last_changed_str) or { time.Time{} }\r\n\tstate.last_changed = last_changed.add_seconds(offset)\r\n\treturn state\r\n}\r\n\r\npub struct HassEventData {\r\npub:\r\n\tentity_id string\r\npub mut:\r\n\tnew_state HassState\r\n\told_state HassState\r\n}\r\n\r\nfn parse_hass_event_data(json json2.Any) ? HassEventData {\r\n\tmut mp := json.as_map()\r\n\treturn HassEventData{\r\n\t\tentity_id: mp['entity_id']?.str()\r\n\t\tnew_state: parse_hass_state(mp['new_state']?)?\r\n\t\told_state: parse_hass_state(mp['old_state']?)?\r\n\t}\r\n}\r\n\r\npub struct HassEvent {\r\npub:\r\n\tevent_type string\r\n\ttime_fired string\r\n\torigin     string\r\n\tcontext    Context\r\n}\r\n\r\npub struct Context {\r\n\tid        string\r\n\tparent_id string\r\n\tuser_id   string\r\n}\r\n\r\nfn parse_context(json json2.Any) ? Context {\r\n\tmut mp := json.as_map()\r\n\treturn Context{\r\n\t\tid: mp['id']?.str()\r\n\t\tparent_id: mp['parent_id']?.str()\r\n\t\tuser_id: mp['user_id']?.str()\r\n\t}\r\n}\r\n\r\npub struct HassStateChangedEvent {\r\npub mut:\r\n\ttime_fired string\r\n\tdata       HassEventData\r\n\tcontext    Context\r\n}\r\n\r\nfn parse_hass_state_changed_event(json json2.Any) ? HassStateChangedEvent {\r\n\tmut mp := json.as_map()\r\n\treturn HassStateChangedEvent{\r\n\t\ttime_fired: mp['time_fired']?.str()\r\n\t\tdata: parse_hass_event_data(mp['data']?)?\r\n\t\tcontext: parse_context(mp['context']?)?\r\n\t}\r\n}\r\n\r\npub struct StateChangedEventMessage {\r\npub mut:\r\n\tid    int = -1\r\n\tevent HassStateChangedEvent\r\n}\r\n\r\nfn parse_hass_changed_event_message(json json2.Any) ? StateChangedEventMessage {\r\n\tmut mp := json.as_map()\r\n\treturn StateChangedEventMessage{\r\n\t\tid: mp['id']?.int()\r\n\t\tevent: parse_hass_state_changed_event(mp['event']?)?\r\n\t}\r\n}\r\n\r\npub struct EventMessage {\r\npub mut:\r\n\tid    int = -1\r\n\tevent HassEvent\r\n}\r\n\r\nfn parse_hass_event_message(json json2.Any) ? EventMessage {\r\n\tmut mp := json.as_map()\r\n\treturn EventMessage{\r\n\t\tid: mp['id']?.int()\r\n\t\tevent: parse_hass_hass_event(mp['event']?)?\r\n\t}\r\n}\r\n\r\nfn parse_hass_hass_event(json json2.Any) ? HassEvent {\r\n\tmut mp := json.as_map()\r\n\treturn HassEvent{\r\n\t\ttime_fired: mp['time_fired']?.str()\r\n\t\tevent_type: mp['event_type']?.str()\r\n\t}\r\n}\r\n\r\npub struct SubscribeToEventsMessage {\r\n\tmessage_type string [json: 'type'] = 'subscribe_events'\r\npub:\r\n\tid int\r\n}\r\n\r\nfn new_subscribe_events_message(id int) SubscribeToEventsMessage {\r\n\treturn SubscribeToEventsMessage{\r\n\t\tid: id\r\n\t}\r\n}\r\n\r\nfn (e SubscribeToEventsMessage) encode_json() string {\r\n\tmut jsn_any := map[string]json2.Any{}\r\n\tjsn_any['id'] = e.id\r\n\tjsn_any['type'] = e.message_type\r\n\treturn jsn_any.str()\r\n}\r\n\r\npub struct AuthMessage {\r\n\tmessage_type string [json: 'type'] = 'auth'\r\npub:\r\n\taccess_token string\r\n}\r\n\r\nfn new_auth_message(token string) AuthMessage {\r\n\treturn AuthMessage{\r\n\t\taccess_token: token\r\n\t}\r\n}\r\n\r\nfn (e AuthMessage) encode_json() string {\r\n\tmut jsn_any := map[string]json2.Any{}\r\n\tjsn_any['access_token'] = e.access_token\r\n\tjsn_any['type'] = e.message_type\r\n\treturn jsn_any.str()\r\n}\r\n\r\npub struct CallServiceMessage {\r\n\tmessage_type string [json: 'type'] = 'call_service'\r\npub:\r\n\tid           int\r\n\tdomain       string\r\n\tservice      string\r\n\tservice_data json2.Any\r\n\ttarget       Target\r\n}\r\n\r\nfn new_call_service_message(id int, domain string, service string, service_data json2.Any, target Target) CallServiceMessage {\r\n\treturn CallServiceMessage{\r\n\t\tid: id\r\n\t\tdomain: domain\r\n\t\tservice: service\r\n\t\tservice_data: service_data\r\n\t\ttarget: target\r\n\t}\r\n}\r\n\r\nfn (e CallServiceMessage) encode_json() json2.Any {\r\n\tmut jsn_any := map[string]json2.Any{}\r\n\tjsn_any['id'] = e.id\r\n\tjsn_any['type'] = e.message_type\r\n\tjsn_any['domain'] = e.domain\r\n\tjsn_any['service'] = e.service\r\n\tif e.service_data !is json2.Null {\r\n\t\tjsn_any['service_data'] = e.service_data\r\n\t}\r\n\tif e.target.entity_id.len > 0 || e.target.device_id.len > 0 || e.target.area_id.len > 0 {\r\n\t\tjsn_any['target'] = e.target.encode_json()\r\n\t}\r\n\r\n\treturn jsn_any\r\n}\r\n\r\npub struct Target {\r\n\tentity_id []string\r\n\tdevice_id []string\r\n\tarea_id   []string\r\n}\r\n\r\npub fn (e Target) encode_json() json2.Any {\r\n\tmut jsn_any := map[string]json2.Any{}\r\n\tif e.entity_id.len > 0 {\r\n\t\tif e.entity_id.len == 1 {\r\n\t\t\tjsn_any['entity_id'] = e.entity_id[0]\r\n\t\t} else {\r\n\t\t\tmut entities := e.entity_id.map(json2.Any(it))\r\n\r\n\t\t\tjsn_any['entity_id'] = entities\r\n\t\t}\r\n\t}\r\n\r\n\tif e.device_id.len > 0 {\r\n\t\tif e.device_id.len == 1 {\r\n\t\t\tjsn_any['device_id'] = e.device_id[0]\r\n\t\t} else {\r\n\t\t\tmut devices := e.device_id.map(json2.Any(it))\r\n\r\n\t\t\tjsn_any['device_id'] = devices\r\n\t\t}\r\n\t}\r\n\r\n\tif e.area_id.len > 0 {\r\n\t\tif e.area_id.len == 1 {\r\n\t\t\tjsn_any['area_id'] = e.area_id[0]\r\n\t\t} else {\r\n\t\t\tmut areas := e.area_id.map(json2.Any(it))\r\n\r\n\t\t\tjsn_any['area_id'] = areas\r\n\t\t}\r\n\t}\r\n\treturn jsn_any\r\n}\r\n"}}}

[Trace - 14:38:29] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/api.v","diagnostics":[]}}

[Trace - 14:38:29] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","diagnostics":[]}}

[Trace - 14:38:29] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","diagnostics":[]}}

[Trace - 14:38:29] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/main.v","languageId":"v","version":48,"text":"module main\r\n\r\nimport hassclient as hc\r\nimport log\r\nimport os\r\n\r\nfn main() {\r\n\tmut c := hc.new_connection(hc.ConnectionConfig{\r\n\t\thass_uri: 'ws://host.docker.internal:8124/api/websocket'\r\n\t\ttoken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJkZmY1MjZmMzc3ZDg0MGI3ODdlZmJiY2Q3MjM5N2VjZSIsImlhdCI6MTYzNzE1MTI5OCwiZXhwIjoxOTUyNTExMjk4fQ.l-BU63JnSMYw3__YFKACT4sSmTmBFN2K4TiQWiGGD8k'\r\n\t\t// Uses the HASS_TOKEN env instead if empty\r\n\t\tlog_level: log.Level.debug\r\n\t}) or { panic(err) }\r\n\tgo c.connect()\r\n\tgo handle_new_messages(mut c)\r\n\tos.get_line()\r\n}\r\n\r\nfn handle_new_messages(mut c hc.HassConnection) {\r\n\tfor {\r\n\t\tmut event_data := <-c.events_channel\r\n\t\tprintln('FROM CHANNEL: $event_data')\r\n\t}\r\n}\r\n"}}}

[Trace - 14:38:30] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/main.v","diagnostics":[]}}

[Trace - 14:38:30] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/api.v","languageId":"v","version":16,"text":"module hassclient\r\n\r\nimport x.json2\r\n\r\n// call_service makes a service call to the given domain and service using entities as target\r\npub fn (mut c HassConnection) call_service(domain string, service string, service_data json2.Any, entity_id ...string) ? {\r\n\tc.sequence++\r\n\r\n\tcs := new_call_service_message(c.sequence, domain, service, service_data, Target{\r\n\t\tentity_id: entity_id\r\n\t})\r\n\tstr_encoded := cs.encode_json()\r\n\tc.ws.write_string(str_encoded.str()) ?\r\n}\r\n\r\n// call_service_with_device makes a service call to the given domain and service using devices as target\r\npub fn (mut c HassConnection) call_service_with_device(domain string, service string, service_data json2.Any, device_id ...string) ? {\r\n\tc.sequence++\r\n\t\r\n\tcs := new_call_service_message(c.sequence, domain, service, service_data, Target{\r\n\t\tdevice_id: device_id\r\n\t})\r\n\tstr_encoded := cs.encode_json()\r\n\tc.ws.write_string(str_encoded.str()) ?\r\n}\r\n\r\n// call_service_with_area makes a service call to the given domain and service using areas as target\r\npub fn (mut c HassConnection) call_service_with_area(domain string, service string, service_data json2.Any, area_id ...string) ? {\r\n\tc.sequence++\r\n\r\n\tcs := new_call_service_message(c.sequence, domain, service, service_data, Target{\r\n\t\tarea_id: area_id\r\n\t})\r\n\tstr_encoded := cs.encode_json()\r\n\tc.ws.write_string(str_encoded.str()) ?\r\n}\r\n"}}}

[Trace - 14:38:30] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/api.v","diagnostics":[]}}

[Trace - 14:38:31] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","languageId":"v","version":42,"text":"module hassclient\r\n\r\nimport net.websocket\r\nimport log\r\nimport os\r\nimport x.json2\r\n\r\n[heap]\r\npub struct HassConnection {\r\n\thass_uri string\r\npub:\r\n\ttoken string\r\nmut:\r\n\tws       &websocket.Client\r\n\tsequence int = 1\r\n\tlogger   &log.Log\r\npub mut:\r\n\tevents_channel chan StateChangedEventMessage\r\n}\r\n\r\npub struct ConnectionConfig {\r\n\thass_uri  string\r\n\ttoken     string\r\n\tlog_level log.Level = log.Level.info\r\n}\r\n\r\n// Instance new connection to Home Assistant\r\npub fn new_connection(cc ConnectionConfig) ?&HassConnection {\r\n\ttoken := if cc.token != '' { cc.token } else { os.getenv('HOMEASSISTANT__TOKEN') }\r\n\tcl := websocket.new_client(cc.hass_uri) ?\r\n\tch := chan StateChangedEventMessage{cap: 100}\r\n\tmut c := &HassConnection{\r\n\t\thass_uri: cc.hass_uri\r\n\t\ttoken: token\r\n\t\tws: cl\r\n\t\tevents_channel: ch\r\n\t\tlogger: &log.Log{}\r\n\t}\r\n\t// c.ws.nonce_size = 16 // For python back-ends\r\n\tc.ws.on_message_ref(on_message, c)\r\n\tc.ws.on_close(fn (mut ws websocket.Client, close_code int, reason string) ? {\r\n\t\tprintln('SERVER CLOSED THE CONNECTION! ($close_code), $reason')\r\n\t})\r\n\tc.logger.set_level(cc.log_level)\r\n\tc.logger.debug('Initialized HassConnection')\r\n\treturn c\r\n}\r\n\r\n// Connects to Home Assistant\r\npub fn (mut c HassConnection) connect() ? {\r\n\tmut ws := c.ws\r\n\tc.logger.debug('Connecting to Home Assistant at $c.hass_uri')\r\n\tws.connect() ?\r\n\tws.listen() ?\r\n}\r\n\r\nfn on_message(mut ws websocket.Client, msg &websocket.Message, mut c HassConnection) ? {\r\n\tmatch msg.opcode {\r\n\t\t.text_frame {\r\n\t\t\tmsg_str := msg.payload.bytestr()\r\n\t\t\tjson_msg := json2.raw_decode(msg_str) or { json2.Any(json2.null) }\r\n\t\t\tprintln('MESSAGE:\\n$json_msg.str()')\r\n\t\t\tif json_msg == json2.Any(json2.null) {\r\n\t\t\t\tc.logger.error('failed to parse json: $json_msg.str()')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tmut mp := json_msg.as_map()\r\n\t\t\t\r\n\t\t\tmessage_type := (mp['type'] or {''}).str()\r\n\t\t\r\n\t\t\tmatch message_type {\r\n\t\t\t\t// When auth_required send the authorization message with token\r\n\t\t\t\t'auth_required' {\r\n\t\t\t\t\tc.logger.debug('Got auth_required, sending token...')\r\n\t\t\t\t\tauth_message := new_auth_message(c.token)\r\n\t\t\t\t\tc.ws.write_string(auth_message.encode_json()) ?\r\n\t\t\t\t}\r\n\t\t\t\t// When auth is ok, setup subscriptions for all events\r\n\t\t\t\t'auth_ok' {\r\n\t\t\t\t\tc.logger.debug('Authentication success, subscribe to events...')\r\n\t\t\t\t\tc.sequence++\r\n\t\t\t\t\tsubscribe_msg := new_subscribe_events_message(c.sequence)\r\n\t\t\t\t\tc.ws.write_string(subscribe_msg.encode_json()) ?\r\n\t\t\t\t}\r\n\t\t\t\t'event' {\r\n\t\t\t\t\tevent := mp['event']?.as_map() // parse_hass_event_message(json_msg)\r\n\t\t\t\t\tmatch event['event_type']?.str() {\r\n\t\t\t\t\t\t// Home Assistant entity has changed state or attributes\r\n\t\t\t\t\t\t'state_changed' {\r\n\t\t\t\t\t\t\tc.logger.debug('state_changed event...')\r\n\t\t\t\t\t\t\tmut state_changed_event_msg := parse_hass_changed_event_message(json_msg) ?\r\n\t\t\t\t\t\t\tc.events_channel <- state_changed_event_msg\r\n\t\t\t\t\t\t\tif state_changed_event_msg.event.data.entity_id != 'light.bed_light' {\r\n\t\t\t\t\t\t\t\tc.call_service_with_area('light', 'toggle', json2.null,\r\n\t\t\t\t\t\t\t\t\t'bedroom') ?\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tc.logger.error('unhandled opcode: $msg.opcode')\r\n\t\t}\r\n\t}\r\n}\r\n"}}}

[Trace - 14:38:31] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","diagnostics":[]}}

[Trace - 14:40:57] Received request 'textDocument/documentLink - (1)'.
Params: {"jsonrpc":"2.0","id":1,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:40:57] Received request 'textDocument/documentSymbol - (2)'.
Params: {"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:40:57] Sending response 'textDocument/documentSymbol - (2)' took 0ms
Result: {"jsonrpc":"2.0","id":2,"result":[{"name":"HassConnection","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":8,"character":11},"end":{"line":8,"character":25}}},"containerName":""},{"name":"c.connect","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":49,"character":30},"end":{"line":49,"character":37}}},"containerName":""},{"name":"ConnectionConfig","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":20,"character":11},"end":{"line":20,"character":27}}},"containerName":""},{"name":"new_connection","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":27,"character":7},"end":{"line":27,"character":21}}},"containerName":""},{"name":"on_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":56,"character":3},"end":{"line":56,"character":13}}},"containerName":""}]}

[Trace - 14:40:57] Received request 'textDocument/foldingRange - (3)'.
Params: {"jsonrpc":"2.0","id":3,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:40:57] Sending response 'textDocument/foldingRange - (3)' took 0ms
Result: {"jsonrpc":"2.0","id":3,"result":null}

[Trace - 14:40:57] Received request 'textDocument/codeLens - (4)'.
Params: {"jsonrpc":"2.0","id":4,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:40:58] Received request 'textDocument/hover - (5)'.
Params: {"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":59,"character":15}}}

[Trace - 14:40:58] Sending response 'textDocument/hover - (5)' took 0ms
Result: {"jsonrpc":"2.0","id":5,"result":null}

[Trace - 14:41:04] Received request 'textDocument/hover - (6)'.
Params: {"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":82,"character":39}}}

[Trace - 14:41:04] Sending response 'textDocument/hover - (6)' took 0ms
Result: {"jsonrpc":"2.0","id":6,"result":null}

[Trace - 14:41:04] Received request 'textDocument/hover - (7)'.
Params: {"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":78,"character":2}}}

[Trace - 14:41:04] Sending response 'textDocument/hover - (7)' took 0ms
Result: {"jsonrpc":"2.0","id":7,"result":null}

[Trace - 14:41:21] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}

[Trace - 14:41:21] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}

[Trace - 14:41:21] Received notification 'textDocument/didOpen'.
Params: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","languageId":"v","version":1,"text":"module hassclient\r\n\r\nimport x.json2\r\nimport os\r\n\r\nfn test_parse_message_type_auth_returns_auth_type() ? {\r\n\tstate_changed_event := os.read_file('./hassclient/testdata/event.json') ?\r\n\tevent_msg := parse_hass_changed_event_message(json2.raw_decode(state_changed_event) or {\r\n\t\tjson2.Any(json2.null)\r\n\t})\r\n\r\n\tassert event_msg.id == 1\r\n\tassert event_msg.event.data.entity_id == 'sensor.load_15m'\r\n\tassert event_msg.event.data.new_state.state == '0.07'\r\n\tassert event_msg.event.data.new_state.attributes['unit_of_measurement'].str() == ' '\r\n}\r\n"}}}

[Trace - 14:41:21] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","diagnostics":[]}}

[Trace - 14:41:21] Received request 'textDocument/documentLink - (8)'.
Params: {"jsonrpc":"2.0","id":8,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:41:21] Received request 'textDocument/documentSymbol - (9)'.
Params: {"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:41:21] Sending response 'textDocument/documentSymbol - (9)' took 0ms
Result: {"jsonrpc":"2.0","id":9,"result":[{"name":"test_parse_message_type_auth_returns_auth_type","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","range":{"start":{"line":5,"character":3},"end":{"line":5,"character":49}}},"containerName":""}]}

[Trace - 14:41:21] Received request 'textDocument/foldingRange - (10)'.
Params: {"jsonrpc":"2.0","id":10,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:41:21] Sending response 'textDocument/foldingRange - (10)' took 0ms
Result: {"jsonrpc":"2.0","id":10,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":9,"kind":"region"},{"startLine":0,"startCharacter":5,"endLine":15,"endCharacter":1,"kind":"region"}]}

[Trace - 14:41:21] Received request 'textDocument/codeLens - (11)'.
Params: {"jsonrpc":"2.0","id":11,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:41:24] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}

[Trace - 14:41:24] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}

[Trace - 14:41:24] Received request 'textDocument/documentLink - (12)'.
Params: {"jsonrpc":"2.0","id":12,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:24] Received request 'textDocument/documentSymbol - (13)'.
Params: {"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:24] Sending response 'textDocument/documentSymbol - (13)' took 0ms
Result: {"jsonrpc":"2.0","id":13,"result":[{"name":"HassState","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":6,"character":11},"end":{"line":6,"character":20}}},"containerName":""},{"name":"parse_hass_state","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":18,"character":3},"end":{"line":18,"character":19}}},"containerName":""},{"name":"HassEventData","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":38,"character":11},"end":{"line":38,"character":24}}},"containerName":""},{"name":"parse_hass_event_data","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":46,"character":3},"end":{"line":46,"character":24}}},"containerName":""},{"name":"Context","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":63,"character":11},"end":{"line":63,"character":18}}},"containerName":""},{"name":"HassEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":20}}},"containerName":""},{"name":"parse_context","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":69,"character":3},"end":{"line":69,"character":16}}},"containerName":""},{"name":"HassStateChangedEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":78,"character":11},"end":{"line":78,"character":32}}},"containerName":""},{"name":"parse_hass_state_changed_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":85,"character":3},"end":{"line":85,"character":33}}},"containerName":""},{"name":"StateChangedEventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":94,"character":11},"end":{"line":94,"character":35}}},"containerName":""},{"name":"parse_hass_changed_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":100,"character":3},"end":{"line":100,"character":35}}},"containerName":""},{"name":"EventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":23}}},"containerName":""},{"name":"parse_hass_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":114,"character":3},"end":{"line":114,"character":27}}},"containerName":""},{"name":"parse_hass_hass_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":122,"character":3},"end":{"line":122,"character":24}}},"containerName":""},{"name":"SubscribeToEventsMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":130,"character":11},"end":{"line":130,"character":35}}},"containerName":""},{"name":"e.encode_json","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":142,"character":32},"end":{"line":142,"character":43}}},"containerName":""},{"name":"new_subscribe_events_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":136,"character":3},"end":{"line":136,"character":31}}},"containerName":""},{"name":"AuthMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":149,"character":11},"end":{"line":149,"character":22}}},"containerName":""},{"name":"new_auth_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":155,"character":3},"end":{"line":155,"character":19}}},"containerName":""},{"name":"Target","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":204,"character":11},"end":{"line":204,"character":17}}},"containerName":""},{"name":"CallServiceMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":168,"character":11},"end":{"line":168,"character":29}}},"containerName":""},{"name":"new_call_service_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":178,"character":3},"end":{"line":178,"character":27}}},"containerName":""}]}

[Trace - 14:41:24] Received request 'textDocument/foldingRange - (14)'.
Params: {"jsonrpc":"2.0","id":14,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:24] Sending response 'textDocument/foldingRange - (14)' took 0ms
Result: {"jsonrpc":"2.0","id":14,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":4,"endLine":4,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":6,"endLine":16,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":18,"endLine":36,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":38,"endLine":44,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":46,"endLine":53,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":55,"endLine":61,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":63,"endLine":67,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":69,"endLine":76,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":78,"endLine":83,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":85,"endLine":92,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":94,"endLine":98,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":100,"endLine":106,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":108,"endLine":112,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":114,"endLine":120,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":122,"endLine":128,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":130,"endLine":134,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":136,"endLine":140,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":142,"endLine":147,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":149,"endLine":153,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":155,"endLine":159,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":161,"endLine":166,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":168,"endLine":176,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":178,"endLine":186,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":188,"endLine":202,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":204,"endLine":208,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":210,"endLine":242,"endCharacter":1,"kind":"region"}]}

[Trace - 14:41:25] Received request 'textDocument/codeLens - (15)'.
Params: {"jsonrpc":"2.0","id":15,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:35] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}

[Trace - 14:41:35] Received request 'textDocument/codeLens - (16)'.
Params: {"jsonrpc":"2.0","id":16,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:36] Received request 'textDocument/hover - (17)'.
Params: {"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"},"position":{"line":6,"character":16}}}

[Trace - 14:41:36] Sending response 'textDocument/hover - (17)' took 0ms
Result: {"jsonrpc":"2.0","id":17,"result":{"contents":{"language":"v","value":"pub struct HassState"},"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":20}}}}

[Trace - 14:41:37] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}

[Trace - 14:41:37] Received request 'textDocument/codeLens - (18)'.
Params: {"jsonrpc":"2.0","id":18,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:54] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}

[Trace - 14:41:54] Received request 'textDocument/codeLens - (19)'.
Params: {"jsonrpc":"2.0","id":19,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:59] Received request 'textDocument/formatting - (20)'.
Params: {"jsonrpc":"2.0","id":20,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"},"options":{"tabSize":4,"insertSpaces":false}}}

[Trace - 14:41:59] Sending response 'textDocument/formatting - (20)' took 12ms
Result: {"jsonrpc":"2.0","id":20,"result":[{"range":{"start":{"line":0,"character":0},"end":{"line":243,"character":0}},"newText":"module hassclient\n\nimport time\nimport x.json2\nimport json\n\npub struct HassState {\n\tlast_changed_str string [json: 'last_changed']\n\tlast_updated_str string [json: 'last_updated']\npub:\n\tentity_id  string\n\tstate      string\n\tattributes map[string]json2.Any\npub mut:\n\tlast_updated time.Time\n\tlast_changed time.Time\n}\n\nfn parse_hass_state(json json2.Any) ?HassState {\n\tmut mp := json.as_map()\n\n\tmut state := HassState{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tstate: mp['state'] ?.str()\n\t\tattributes: mp['attributes'] ?.as_map()\n\t\tlast_changed_str: mp['last_changed'] ?.str()\n\t\tlast_updated_str: mp['last_updated'] ?.str()\n\t}\n\n\toffset := time.offset()\n\tlast_updated := time.parse_iso8601(state.last_updated_str) or { time.Time{} }\n\tstate.last_updated = last_updated.add_seconds(offset)\n\n\tlast_changed := time.parse_iso8601(state.last_changed_str) or { time.Time{} }\n\tstate.last_changed = last_changed.add_seconds(offset)\n\treturn state\n}\n\npub struct HassEventData {\npub:\n\tentity_id string\npub mut:\n\tnew_state HassState\n\told_state HassState\n}\n\nfn parse_hass_event_data(json json2.Any) ?HassEventData {\n\tmut mp := json.as_map()\n\treturn HassEventData{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tnew_state: parse_hass_state(mp['new_state'] ?) ?\n\t\told_state: parse_hass_state(mp['old_state'] ?) ?\n\t}\n}\n\npub struct HassEvent {\npub:\n\tevent_type string\n\ttime_fired string\n\torigin     string\n\tcontext    Context\n}\n\npub struct Context {\n\tid        string\n\tparent_id string\n\tuser_id   string\n}\n\nfn parse_context(json json2.Any) ?Context {\n\tmut mp := json.as_map()\n\treturn Context{\n\t\tid: mp['id'] ?.str()\n\t\tparent_id: mp['parent_id'] ?.str()\n\t\tuser_id: mp['user_id'] ?.str()\n\t}\n}\n\npub struct HassStateChangedEvent {\npub mut:\n\ttime_fired string\n\tdata       HassEventData\n\tcontext    Context\n}\n\nfn parse_hass_state_changed_event(json json2.Any) ?HassStateChangedEvent {\n\tmut mp := json.as_map()\n\treturn HassStateChangedEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tdata: parse_hass_event_data(mp['data'] ?) ?\n\t\tcontext: parse_context(mp['context'] ?) ?\n\t}\n}\n\npub struct StateChangedEventMessage {\npub mut:\n\tid    int = -1\n\tevent HassStateChangedEvent\n}\n\nfn parse_hass_changed_event_message(json json2.Any) ?StateChangedEventMessage {\n\tmut mp := json.as_map()\n\treturn StateChangedEventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_state_changed_event(mp['event'] ?) ?\n\t}\n}\n\npub struct EventMessage {\npub mut:\n\tid    int = -1\n\tevent HassEvent\n}\n\nfn parse_hass_event_message(json json2.Any) ?EventMessage {\n\tmut mp := json.as_map()\n\treturn EventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_hass_event(mp['event'] ?) ?\n\t}\n}\n\nfn parse_hass_hass_event(json json2.Any) ?HassEvent {\n\tmut mp := json.as_map()\n\treturn HassEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tevent_type: mp['event_type'] ?.str()\n\t}\n}\n\npub struct SubscribeToEventsMessage {\n\tmessage_type string [json: 'type'] = 'subscribe_events'\npub:\n\tid int\n}\n\nfn new_subscribe_events_message(id int) SubscribeToEventsMessage {\n\treturn SubscribeToEventsMessage{\n\t\tid: id\n\t}\n}\n\nfn (e SubscribeToEventsMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct AuthMessage {\n\tmessage_type string [json: 'type'] = 'auth'\npub:\n\taccess_token string\n}\n\nfn new_auth_message(token string) AuthMessage {\n\treturn AuthMessage{\n\t\taccess_token: token\n\t}\n}\n\nfn (e AuthMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['access_token'] = e.access_token\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct CallServiceMessage {\n\tmessage_type string [json: 'type'] = 'call_service'\npub:\n\tid           int\n\tdomain       string\n\tservice      string\n\tservice_data json2.Any\n\ttarget       Target\n}\n\nfn new_call_service_message(id int, domain string, service string, service_data json2.Any, target Target) CallServiceMessage {\n\treturn CallServiceMessage{\n\t\tid: id\n\t\tdomain: domain\n\t\tservice: service\n\t\tservice_data: service_data\n\t\ttarget: target\n\t}\n}\n\nfn (e CallServiceMessage) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\tjsn_any['domain'] = e.domain\n\tjsn_any['service'] = e.service\n\tif e.service_data !is json2.Null {\n\t\tjsn_any['service_data'] = e.service_data\n\t}\n\tif e.target.entity_id.len > 0 || e.target.device_id.len > 0 || e.target.area_id.len > 0 {\n\t\tjsn_any['target'] = e.target.encode_json()\n\t}\n\n\treturn jsn_any\n}\n\npub struct Target {\n\tentity_id []string\n\tdevice_id []string\n\tarea_id   []string\n}\n\npub fn (e Target) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tif e.entity_id.len > 0 {\n\t\tif e.entity_id.len == 1 {\n\t\t\tjsn_any['entity_id'] = e.entity_id[0]\n\t\t} else {\n\t\t\tmut entities := e.entity_id.map(json2.Any(it))\n\n\t\t\tjsn_any['entity_id'] = entities\n\t\t}\n\t}\n\n\tif e.device_id.len > 0 {\n\t\tif e.device_id.len == 1 {\n\t\t\tjsn_any['device_id'] = e.device_id[0]\n\t\t} else {\n\t\t\tmut devices := e.device_id.map(json2.Any(it))\n\n\t\t\tjsn_any['device_id'] = devices\n\t\t}\n\t}\n\n\tif e.area_id.len > 0 {\n\t\tif e.area_id.len == 1 {\n\t\t\tjsn_any['area_id'] = e.area_id[0]\n\t\t} else {\n\t\t\tmut areas := e.area_id.map(json2.Any(it))\n\n\t\t\tjsn_any['area_id'] = areas\n\t\t}\n\t}\n\treturn jsn_any\n}\n"}]}

[Trace - 14:41:59] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","version":2},"contentChanges":[{"range":{"start":{"line":126,"character":30},"end":{"line":126,"character":30}},"rangeLength":0,"text":" "},{"range":{"start":{"line":125,"character":30},"end":{"line":125,"character":30}},"rangeLength":0,"text":" "},{"range":{"start":{"line":122,"character":42},"end":{"line":122,"character":43}},"rangeLength":1,"text":""},{"range":{"start":{"line":118,"character":44},"end":{"line":118,"character":44}},"rangeLength":0,"text":" "},{"range":{"start":{"line":118,"character":42},"end":{"line":118,"character":42}},"rangeLength":0,"text":" "},{"range":{"start":{"line":117,"character":14},"end":{"line":117,"character":14}},"rangeLength":0,"text":" "},{"range":{"start":{"line":114,"character":45},"end":{"line":114,"character":46}},"rangeLength":1,"text":""},{"range":{"start":{"line":104,"character":53},"end":{"line":104,"character":53}},"rangeLength":0,"text":" "},{"range":{"start":{"line":104,"character":51},"end":{"line":104,"character":51}},"rangeLength":0,"text":" "},{"range":{"start":{"line":103,"character":14},"end":{"line":103,"character":14}},"rangeLength":0,"text":" "},{"range":{"start":{"line":100,"character":53},"end":{"line":100,"character":54}},"rangeLength":1,"text":""},{"range":{"start":{"line":90,"character":40},"end":{"line":90,"character":40}},"rangeLength":0,"text":" "},{"range":{"start":{"line":90,"character":38},"end":{"line":90,"character":38}},"rangeLength":0,"text":" "},{"range":{"start":{"line":89,"character":42},"end":{"line":89,"character":42}},"rangeLength":0,"text":" "},{"range":{"start":{"line":89,"character":40},"end":{"line":89,"character":40}},"rangeLength":0,"text":" "},{"range":{"start":{"line":88,"character":30},"end":{"line":88,"character":30}},"rangeLength":0,"text":" "},{"range":{"start":{"line":85,"character":51},"end":{"line":85,"character":52}},"rangeLength":1,"text":""},{"range":{"start":{"line":74,"character":24},"end":{"line":74,"character":24}},"rangeLength":0,"text":" "},{"range":{"start":{"line":73,"character":28},"end":{"line":73,"character":28}},"rangeLength":0,"text":" "},{"range":{"start":{"line":72,"character":14},"end":{"line":72,"character":14}},"rangeLength":0,"text":" "},{"range":{"start":{"line":69,"character":34},"end":{"line":69,"character":35}},"rangeLength":1,"text":""},{"range":{"start":{"line":51,"character":47},"end":{"line":51,"character":47}},"rangeLength":0,"text":" "},{"range":{"start":{"line":51,"character":45},"end":{"line":51,"character":45}},"rangeLength":0,"text":" "},{"range":{"start":{"line":50,"character":47},"end":{"line":50,"character":47}},"rangeLength":0,"text":" "},{"range":{"start":{"line":50,"character":45},"end":{"line":50,"character":45}},"rangeLength":0,"text":" "},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}},"rangeLength":0,"text":" "},{"range":{"start":{"line":46,"character":42},"end":{"line":46,"character":43}},"rangeLength":1,"text":""},{"range":{"start":{"line":26,"character":38},"end":{"line":26,"character":38}},"rangeLength":0,"text":" "},{"range":{"start":{"line":25,"character":38},"end":{"line":25,"character":38}},"rangeLength":0,"text":" "},{"range":{"start":{"line":24,"character":30},"end":{"line":24,"character":30}},"rangeLength":0,"text":" "},{"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}},"rangeLength":0,"text":" "},{"range":{"start":{"line":22,"character":28},"end":{"line":22,"character":28}},"rangeLength":0,"text":" "},{"range":{"start":{"line":18,"character":37},"end":{"line":18,"character":38}},"rangeLength":1,"text":""}]}}

[Trace - 14:41:59] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","diagnostics":[]}}

[Trace - 14:41:59] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","diagnostics":[]}}

[Trace - 14:41:59] Received request 'textDocument/foldingRange - (21)'.
Params: {"jsonrpc":"2.0","id":21,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:59] Sending response 'textDocument/foldingRange - (21)' took 2ms
Result: {"jsonrpc":"2.0","id":21,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":4,"endLine":4,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":6,"endLine":16,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":18,"endLine":36,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":38,"endLine":44,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":46,"endLine":53,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":55,"endLine":61,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":63,"endLine":67,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":69,"endLine":76,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":78,"endLine":83,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":85,"endLine":92,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":94,"endLine":98,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":100,"endLine":106,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":108,"endLine":112,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":114,"endLine":120,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":122,"endLine":128,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":130,"endLine":134,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":136,"endLine":140,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":142,"endLine":147,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":149,"endLine":153,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":155,"endLine":159,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":161,"endLine":166,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":168,"endLine":176,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":178,"endLine":186,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":188,"endLine":202,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":204,"endLine":208,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":210,"endLine":242,"endCharacter":1,"kind":"region"}]}

[Trace - 14:41:59] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}

[Trace - 14:41:59] Received request 'textDocument/codeLens - (22)'.
Params: {"jsonrpc":"2.0","id":22,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:59] Received request 'textDocument/documentSymbol - (23)'.
Params: {"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:41:59] Sending response 'textDocument/documentSymbol - (23)' took 0ms
Result: {"jsonrpc":"2.0","id":23,"result":[{"name":"HassState","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":6,"character":11},"end":{"line":6,"character":20}}},"containerName":""},{"name":"parse_hass_state","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":18,"character":3},"end":{"line":18,"character":19}}},"containerName":""},{"name":"HassEventData","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":38,"character":11},"end":{"line":38,"character":24}}},"containerName":""},{"name":"parse_hass_event_data","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":46,"character":3},"end":{"line":46,"character":24}}},"containerName":""},{"name":"Context","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":63,"character":11},"end":{"line":63,"character":18}}},"containerName":""},{"name":"HassEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":20}}},"containerName":""},{"name":"parse_context","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":69,"character":3},"end":{"line":69,"character":16}}},"containerName":""},{"name":"HassStateChangedEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":78,"character":11},"end":{"line":78,"character":32}}},"containerName":""},{"name":"parse_hass_state_changed_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":85,"character":3},"end":{"line":85,"character":33}}},"containerName":""},{"name":"StateChangedEventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":94,"character":11},"end":{"line":94,"character":35}}},"containerName":""},{"name":"parse_hass_changed_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":100,"character":3},"end":{"line":100,"character":35}}},"containerName":""},{"name":"EventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":23}}},"containerName":""},{"name":"parse_hass_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":114,"character":3},"end":{"line":114,"character":27}}},"containerName":""},{"name":"parse_hass_hass_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":122,"character":3},"end":{"line":122,"character":24}}},"containerName":""},{"name":"SubscribeToEventsMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":130,"character":11},"end":{"line":130,"character":35}}},"containerName":""},{"name":"e.encode_json","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":142,"character":32},"end":{"line":142,"character":43}}},"containerName":""},{"name":"new_subscribe_events_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":136,"character":3},"end":{"line":136,"character":31}}},"containerName":""},{"name":"AuthMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":149,"character":11},"end":{"line":149,"character":22}}},"containerName":""},{"name":"new_auth_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":155,"character":3},"end":{"line":155,"character":19}}},"containerName":""},{"name":"Target","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":204,"character":11},"end":{"line":204,"character":17}}},"containerName":""},{"name":"CallServiceMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":168,"character":11},"end":{"line":168,"character":29}}},"containerName":""},{"name":"new_call_service_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":178,"character":3},"end":{"line":178,"character":27}}},"containerName":""}]}

[Trace - 14:42:00] Received request 'textDocument/documentLink - (24)'.
Params: {"jsonrpc":"2.0","id":24,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:00] Received request 'textDocument/formatting - (25)'.
Params: {"jsonrpc":"2.0","id":25,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"},"options":{"tabSize":4,"insertSpaces":false}}}

[Trace - 14:42:00] Sending response 'textDocument/formatting - (25)' took 8ms
Result: {"jsonrpc":"2.0","id":25,"result":[{"range":{"start":{"line":0,"character":0},"end":{"line":243,"character":0}},"newText":"module hassclient\n\nimport time\nimport x.json2\nimport json\n\npub struct HassState {\n\tlast_changed_str string [json: 'last_changed']\n\tlast_updated_str string [json: 'last_updated']\npub:\n\tentity_id  string\n\tstate      string\n\tattributes map[string]json2.Any\npub mut:\n\tlast_updated time.Time\n\tlast_changed time.Time\n}\n\nfn parse_hass_state(json json2.Any) ?HassState {\n\tmut mp := json.as_map()\n\n\tmut state := HassState{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tstate: mp['state'] ?.str()\n\t\tattributes: mp['attributes'] ?.as_map()\n\t\tlast_changed_str: mp['last_changed'] ?.str()\n\t\tlast_updated_str: mp['last_updated'] ?.str()\n\t}\n\n\toffset := time.offset()\n\tlast_updated := time.parse_iso8601(state.last_updated_str) or { time.Time{} }\n\tstate.last_updated = last_updated.add_seconds(offset)\n\n\tlast_changed := time.parse_iso8601(state.last_changed_str) or { time.Time{} }\n\tstate.last_changed = last_changed.add_seconds(offset)\n\treturn state\n}\n\npub struct HassEventData {\npub:\n\tentity_id string\npub mut:\n\tnew_state HassState\n\told_state HassState\n}\n\nfn parse_hass_event_data(json json2.Any) ?HassEventData {\n\tmut mp := json.as_map()\n\treturn HassEventData{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tnew_state: parse_hass_state(mp['new_state'] ?) ?\n\t\told_state: parse_hass_state(mp['old_state'] ?) ?\n\t}\n}\n\npub struct HassEvent {\npub:\n\tevent_type string\n\ttime_fired string\n\torigin     string\n\tcontext    Context\n}\n\npub struct Context {\n\tid        string\n\tparent_id string\n\tuser_id   string\n}\n\nfn parse_context(json json2.Any) ?Context {\n\tmut mp := json.as_map()\n\treturn Context{\n\t\tid: mp['id'] ?.str()\n\t\tparent_id: mp['parent_id'] ?.str()\n\t\tuser_id: mp['user_id'] ?.str()\n\t}\n}\n\npub struct HassStateChangedEvent {\npub mut:\n\ttime_fired string\n\tdata       HassEventData\n\tcontext    Context\n}\n\nfn parse_hass_state_changed_event(json json2.Any) ?HassStateChangedEvent {\n\tmut mp := json.as_map()\n\treturn HassStateChangedEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tdata: parse_hass_event_data(mp['data'] ?) ?\n\t\tcontext: parse_context(mp['context'] ?) ?\n\t}\n}\n\npub struct StateChangedEventMessage {\npub mut:\n\tid    int = -1\n\tevent HassStateChangedEvent\n}\n\nfn parse_hass_changed_event_message(json json2.Any) ?StateChangedEventMessage {\n\tmut mp := json.as_map()\n\treturn StateChangedEventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_state_changed_event(mp['event'] ?) ?\n\t}\n}\n\npub struct EventMessage {\npub mut:\n\tid    int = -1\n\tevent HassEvent\n}\n\nfn parse_hass_event_message(json json2.Any) ?EventMessage {\n\tmut mp := json.as_map()\n\treturn EventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_hass_event(mp['event'] ?) ?\n\t}\n}\n\nfn parse_hass_hass_event(json json2.Any) ?HassEvent {\n\tmut mp := json.as_map()\n\treturn HassEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tevent_type: mp['event_type'] ?.str()\n\t}\n}\n\npub struct SubscribeToEventsMessage {\n\tmessage_type string [json: 'type'] = 'subscribe_events'\npub:\n\tid int\n}\n\nfn new_subscribe_events_message(id int) SubscribeToEventsMessage {\n\treturn SubscribeToEventsMessage{\n\t\tid: id\n\t}\n}\n\nfn (e SubscribeToEventsMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct AuthMessage {\n\tmessage_type string [json: 'type'] = 'auth'\npub:\n\taccess_token string\n}\n\nfn new_auth_message(token string) AuthMessage {\n\treturn AuthMessage{\n\t\taccess_token: token\n\t}\n}\n\nfn (e AuthMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['access_token'] = e.access_token\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct CallServiceMessage {\n\tmessage_type string [json: 'type'] = 'call_service'\npub:\n\tid           int\n\tdomain       string\n\tservice      string\n\tservice_data json2.Any\n\ttarget       Target\n}\n\nfn new_call_service_message(id int, domain string, service string, service_data json2.Any, target Target) CallServiceMessage {\n\treturn CallServiceMessage{\n\t\tid: id\n\t\tdomain: domain\n\t\tservice: service\n\t\tservice_data: service_data\n\t\ttarget: target\n\t}\n}\n\nfn (e CallServiceMessage) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\tjsn_any['domain'] = e.domain\n\tjsn_any['service'] = e.service\n\tif e.service_data !is json2.Null {\n\t\tjsn_any['service_data'] = e.service_data\n\t}\n\tif e.target.entity_id.len > 0 || e.target.device_id.len > 0 || e.target.area_id.len > 0 {\n\t\tjsn_any['target'] = e.target.encode_json()\n\t}\n\n\treturn jsn_any\n}\n\npub struct Target {\n\tentity_id []string\n\tdevice_id []string\n\tarea_id   []string\n}\n\npub fn (e Target) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tif e.entity_id.len > 0 {\n\t\tif e.entity_id.len == 1 {\n\t\t\tjsn_any['entity_id'] = e.entity_id[0]\n\t\t} else {\n\t\t\tmut entities := e.entity_id.map(json2.Any(it))\n\n\t\t\tjsn_any['entity_id'] = entities\n\t\t}\n\t}\n\n\tif e.device_id.len > 0 {\n\t\tif e.device_id.len == 1 {\n\t\t\tjsn_any['device_id'] = e.device_id[0]\n\t\t} else {\n\t\t\tmut devices := e.device_id.map(json2.Any(it))\n\n\t\t\tjsn_any['device_id'] = devices\n\t\t}\n\t}\n\n\tif e.area_id.len > 0 {\n\t\tif e.area_id.len == 1 {\n\t\t\tjsn_any['area_id'] = e.area_id[0]\n\t\t} else {\n\t\t\tmut areas := e.area_id.map(json2.Any(it))\n\n\t\t\tjsn_any['area_id'] = areas\n\t\t}\n\t}\n\treturn jsn_any\n}\n"}]}

[Trace - 14:42:00] Received notification 'textDocument/didSave'.
Params: {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:01] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}

[Trace - 14:42:01] Received request 'textDocument/codeLens - (26)'.
Params: {"jsonrpc":"2.0","id":26,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:35] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/main.v","version":49},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":24,"character":0}},"rangeLength":700,"text":"module main\n\nimport hassclient as hc\nimport log\nimport os\n\nfn main() {\n\tmut c := hc.new_connection(hc.ConnectionConfig{\n\t\thass_uri: 'ws://host.docker.internal:8124/api/websocket'\n\t\ttoken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJkZmY1MjZmMzc3ZDg0MGI3ODdlZmJiY2Q3MjM5N2VjZSIsImlhdCI6MTYzNzE1MTI5OCwiZXhwIjoxOTUyNTExMjk4fQ.l-BU63JnSMYw3__YFKACT4sSmTmBFN2K4TiQWiGGD8k'\n\t\t// Uses the HASS_TOKEN env instead if empty\n\t\tlog_level: log.Level.debug\n\t}) or { panic(err) }\n\tgo c.connect()\n\tgo handle_new_messages(mut c)\n\tos.get_line()\n}\n\nfn handle_new_messages(mut c hc.HassConnection) {\n\tfor {\n\t\tmut event_data := <-c.events_channel\n\t\tprintln('FROM CHANNEL: $event_data')\n\t}\n}\n"}]}}

[Trace - 14:42:35] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/main.v","diagnostics":[]}}

[Trace - 14:42:35] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/main.v","diagnostics":[]}}

[Trace - 14:42:35] Received notification 'workspace/didChangeWatchedFiles'.
Params: {"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///workspaces/v-hassclient/main.v","type":2}]}}

[Trace - 14:42:41] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}

[Trace - 14:42:41] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}

[Trace - 14:42:41] Received request 'textDocument/documentLink - (27)'.
Params: {"jsonrpc":"2.0","id":27,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:41] Received request 'textDocument/documentSymbol - (28)'.
Params: {"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:41] Sending response 'textDocument/documentSymbol - (28)' took 0ms
Result: {"jsonrpc":"2.0","id":28,"result":[{"name":"HassConnection","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":8,"character":11},"end":{"line":8,"character":25}}},"containerName":""},{"name":"c.connect","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":49,"character":30},"end":{"line":49,"character":37}}},"containerName":""},{"name":"ConnectionConfig","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":20,"character":11},"end":{"line":20,"character":27}}},"containerName":""},{"name":"new_connection","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":27,"character":7},"end":{"line":27,"character":21}}},"containerName":""},{"name":"on_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":56,"character":3},"end":{"line":56,"character":13}}},"containerName":""}]}

[Trace - 14:42:41] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","version":43},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":109,"character":0}},"rangeLength":3141,"text":"module hassclient\n\nimport net.websocket\nimport log\nimport os\nimport x.json2\n\n[heap]\npub struct HassConnection {\n\thass_uri string\npub:\n\ttoken string\nmut:\n\tws       &websocket.Client\n\tsequence int = 1\n\tlogger   &log.Log\npub mut:\n\tevents_channel chan StateChangedEventMessage\n}\n\npub struct ConnectionConfig {\n\thass_uri  string\n\ttoken     string\n\tlog_level log.Level = log.Level.info\n}\n\n// Instance new connection to Home Assistant\npub fn new_connection(cc ConnectionConfig) ?&HassConnection {\n\ttoken := if cc.token != '' { cc.token } else { os.getenv('HOMEASSISTANT__TOKEN') }\n\tcl := websocket.new_client(cc.hass_uri) ?\n\tch := chan StateChangedEventMessage{cap: 100}\n\tmut c := &HassConnection{\n\t\thass_uri: cc.hass_uri\n\t\ttoken: token\n\t\tws: cl\n\t\tevents_channel: ch\n\t\tlogger: &log.Log{}\n\t}\n\t// c.ws.nonce_size = 16 // For python back-ends\n\tc.ws.on_message_ref(on_message, c)\n\tc.ws.on_close(fn (mut ws websocket.Client, close_code int, reason string) ? {\n\t\tprintln('SERVER CLOSED THE CONNECTION! ($close_code), $reason')\n\t})\n\tc.logger.set_level(cc.log_level)\n\tc.logger.debug('Initialized HassConnection')\n\treturn c\n}\n\n// Connects to Home Assistant\npub fn (mut c HassConnection) connect() ? {\n\tmut ws := c.ws\n\tc.logger.debug('Connecting to Home Assistant at $c.hass_uri')\n\tws.connect() ?\n\tws.listen() ?\n}\n\nfn on_message(mut ws websocket.Client, msg &websocket.Message, mut c HassConnection) ? {\n\tmatch msg.opcode {\n\t\t.text_frame {\n\t\t\tmsg_str := msg.payload.bytestr()\n\t\t\tjson_msg := json2.raw_decode(msg_str) or { json2.Any(json2.null) }\n\t\t\tprintln('MESSAGE:\\n$json_msg.str()')\n\t\t\tif json_msg == json2.Any(json2.null) {\n\t\t\t\tc.logger.error('failed to parse json: $json_msg.str()')\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmut mp := json_msg.as_map()\n\t\t\t\n\t\t\tmessage_type := (mp['type'] or {''}).str()\n\t\t\n\t\t\tmatch message_type {\n\t\t\t\t// When auth_required send the authorization message with token\n\t\t\t\t'auth_required' {\n\t\t\t\t\tc.logger.debug('Got auth_required, sending token...')\n\t\t\t\t\tauth_message := new_auth_message(c.token)\n\t\t\t\t\tc.ws.write_string(auth_message.encode_json()) ?\n\t\t\t\t}\n\t\t\t\t// When auth is ok, setup subscriptions for all events\n\t\t\t\t'auth_ok' {\n\t\t\t\t\tc.logger.debug('Authentication success, subscribe to events...')\n\t\t\t\t\tc.sequence++\n\t\t\t\t\tsubscribe_msg := new_subscribe_events_message(c.sequence)\n\t\t\t\t\tc.ws.write_string(subscribe_msg.encode_json()) ?\n\t\t\t\t}\n\t\t\t\t'event' {\n\t\t\t\t\tevent := mp['event']?.as_map() // parse_hass_event_message(json_msg)\n\t\t\t\t\tmatch event['event_type']?.str() {\n\t\t\t\t\t\t// Home Assistant entity has changed state or attributes\n\t\t\t\t\t\t'state_changed' {\n\t\t\t\t\t\t\tc.logger.debug('state_changed event...')\n\t\t\t\t\t\t\tmut state_changed_event_msg := parse_hass_changed_event_message(json_msg) ?\n\t\t\t\t\t\t\tc.events_channel <- state_changed_event_msg\n\t\t\t\t\t\t\tif state_changed_event_msg.event.data.entity_id != 'light.bed_light' {\n\t\t\t\t\t\t\t\tc.call_service_with_area('light', 'toggle', json2.null,\n\t\t\t\t\t\t\t\t\t'bedroom') ?\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tc.logger.error('unhandled opcode: $msg.opcode')\n\t\t}\n\t}\n}\n"}]}}

[Trace - 14:42:41] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","diagnostics":[]}}

[Trace - 14:42:41] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","version":44},"contentChanges":[{"range":{"start":{"line":38,"character":0},"end":{"line":88,"character":0}},"rangeLength":1681,"text":"\n\t// c.ws.nonce_size = 16 // For python back-ends\n\tc.ws.on_message_ref(on_message, c)\n\tc.ws.on_close(fn (mut ws websocket.Client, close_code int, reason string) ? {\n\t\tprintln('SERVER CLOSED THE CONNECTION! ($close_code), $reason')\n\t})\n\tc.logger.set_level(cc.log_level)\n\tc.logger.debug('Initialized HassConnection')\n\treturn c\n}\n\n// Connects to Home Assistant\npub fn (mut c HassConnection) connect() ? {\n\tmut ws := c.ws\n\tc.logger.debug('Connecting to Home Assistant at $c.hass_uri')\n\tws.connect() ?\n\tws.listen() ?\n}\n\nfn on_message(mut ws websocket.Client, msg &websocket.Message, mut c HassConnection) ? {\n\tmatch msg.opcode {\n\t\t.text_frame {\n\t\t\tmsg_str := msg.payload.bytestr()\n\t\t\tjson_msg := json2.raw_decode(msg_str) or { json2.Any(json2.null) }\n\t\t\tprintln('MESSAGE:\\n$json_msg.str()')\n\t\t\tif json_msg == json2.Any(json2.null) {\n\t\t\t\tc.logger.error('failed to parse json: $json_msg.str()')\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmut mp := json_msg.as_map()\n\n\t\t\tmessage_type := (mp['type'] or { '' }).str()\n\n\t\t\tmatch message_type {\n\t\t\t\t// When auth_required send the authorization message with token\n\t\t\t\t'auth_required' {\n\t\t\t\t\tc.logger.debug('Got auth_required, sending token...')\n\t\t\t\t\tauth_message := new_auth_message(c.token)\n\t\t\t\t\tc.ws.write_string(auth_message.encode_json()) ?\n\t\t\t\t}\n\t\t\t\t// When auth is ok, setup subscriptions for all events\n\t\t\t\t'auth_ok' {\n\t\t\t\t\tc.logger.debug('Authentication success, subscribe to events...')\n\t\t\t\t\tc.sequence++\n\t\t\t\t\tsubscribe_msg := new_subscribe_events_message(c.sequence)\n\t\t\t\t\tc.ws.write_string(subscribe_msg.encode_json()) ?\n\t\t\t\t}\n\t\t\t\t'event' {\n\t\t\t\t\tevent := mp['event'] ?.as_map() // parse_hass_event_message(json_msg)\n\t\t\t\t\tmatch event['event_type'] ?.str() {\n"}]}}

[Trace - 14:42:41] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","diagnostics":[]}}

[Trace - 14:42:41] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","diagnostics":[]}}

[Trace - 14:42:41] Received request 'textDocument/foldingRange - (29)'.
Params: {"jsonrpc":"2.0","id":29,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:41] Sending response 'textDocument/foldingRange - (29)' took 0ms
Result: {"jsonrpc":"2.0","id":29,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":20,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":10,"kind":"region"},{"startLine":0,"startCharacter":4,"endLine":4,"endCharacter":9,"kind":"region"},{"startLine":0,"startCharacter":5,"endLine":5,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":7,"endLine":18,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":20,"endLine":24,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":26,"endLine":26,"endCharacter":44,"kind":"region"},{"startLine":0,"startCharacter":27,"endLine":47,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":49,"endLine":49,"endCharacter":29,"kind":"region"},{"startLine":0,"startCharacter":50,"endLine":55,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":57,"endLine":109,"endCharacter":1,"kind":"region"}]}

[Trace - 14:42:41] Received request 'textDocument/codeLens - (30)'.
Params: {"jsonrpc":"2.0","id":30,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:41] Received request 'textDocument/documentSymbol - (31)'.
Params: {"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:41] Sending response 'textDocument/documentSymbol - (31)' took 0ms
Result: {"jsonrpc":"2.0","id":31,"result":[{"name":"HassConnection","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":8,"character":11},"end":{"line":8,"character":25}}},"containerName":""},{"name":"c.connect","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":50,"character":30},"end":{"line":50,"character":37}}},"containerName":""},{"name":"ConnectionConfig","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":20,"character":11},"end":{"line":20,"character":27}}},"containerName":""},{"name":"new_connection","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":27,"character":7},"end":{"line":27,"character":21}}},"containerName":""},{"name":"on_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v","range":{"start":{"line":57,"character":3},"end":{"line":57,"character":13}}},"containerName":""}]}

[Trace - 14:42:41] Received request 'textDocument/hover - (32)'.
Params: {"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":14,"character":5}}}

[Trace - 14:42:41] Sending response 'textDocument/hover - (32)' took 0ms
Result: {"jsonrpc":"2.0","id":32,"result":{"contents":{"language":"v","value":"mut HassConnection.sequence int"},"range":{"start":{"line":14,"character":1},"end":{"line":14,"character":9}}}}

[Trace - 14:42:41] Received request 'textDocument/hover - (33)'.
Params: {"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":28,"character":7}}}

[Trace - 14:42:41] Sending response 'textDocument/hover - (33)' took 0ms
Result: {"jsonrpc":"2.0","id":33,"result":{"contents":{"language":"v","value":"cc ConnectionConfig"},"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":15}}}}

[Trace - 14:42:42] Received request 'textDocument/documentLink - (34)'.
Params: {"jsonrpc":"2.0","id":34,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"}}}

[Trace - 14:42:43] Received request 'textDocument/hover - (35)'.
Params: {"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":59,"character":9}}}

[Trace - 14:42:43] Sending response 'textDocument/hover - (35)' took 0ms
Result: {"jsonrpc":"2.0","id":35,"result":null}

[Trace - 14:42:46] Received request 'textDocument/hover - (36)'.
Params: {"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/connection.v"},"position":{"line":106,"character":2}}}

[Trace - 14:42:46] Sending response 'textDocument/hover - (36)' took 0ms
Result: {"jsonrpc":"2.0","id":36,"result":{"contents":{"language":"v","value":"mut c HassConnection"},"range":{"start":{"line":106,"character":3},"end":{"line":106,"character":4}}}}

[Trace - 14:42:47] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}

[Trace - 14:42:47] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}

[Trace - 14:42:47] Received request 'textDocument/documentLink - (37)'.
Params: {"jsonrpc":"2.0","id":37,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:42:47] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":16,"character":0}},"rangeLength":540,"text":"module hassclient\n\nimport x.json2\nimport os\n\nfn test_parse_message_type_auth_returns_auth_type() ? {\n\tstate_changed_event := os.read_file('./hassclient/testdata/event.json') ?\n\tevent_msg := parse_hass_changed_event_message(json2.raw_decode(state_changed_event) or {\n\t\tjson2.Any(json2.null)\n\t})\n\n\tassert event_msg.id == 1\n\tassert event_msg.event.data.entity_id == 'sensor.load_15m'\n\tassert event_msg.event.data.new_state.state == '0.07'\n\tassert event_msg.event.data.new_state.attributes['unit_of_measurement'].str() == ' '\n}\n"}]}}

[Trace - 14:42:47] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","diagnostics":[]}}

[Trace - 14:42:47] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","diagnostics":[]}}

[Trace - 14:42:47] Received request 'textDocument/foldingRange - (38)'.
Params: {"jsonrpc":"2.0","id":38,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:42:47] Sending response 'textDocument/foldingRange - (38)' took 0ms
Result: {"jsonrpc":"2.0","id":38,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":9,"kind":"region"},{"startLine":0,"startCharacter":5,"endLine":15,"endCharacter":1,"kind":"region"}]}

[Trace - 14:42:47] Received request 'textDocument/codeLens - (39)'.
Params: {"jsonrpc":"2.0","id":39,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:42:47] Received request 'textDocument/documentSymbol - (40)'.
Params: {"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:42:47] Sending response 'textDocument/documentSymbol - (40)' took 0ms
Result: {"jsonrpc":"2.0","id":40,"result":[{"name":"test_parse_message_type_auth_returns_auth_type","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v","range":{"start":{"line":5,"character":3},"end":{"line":5,"character":49}}},"containerName":""}]}

[Trace - 14:42:48] Received request 'textDocument/documentLink - (41)'.
Params: {"jsonrpc":"2.0","id":41,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages_test.v"}}}

[Trace - 14:42:51] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}

[Trace - 14:42:51] Received notification '$/cancelRequest'.
Params: {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}

[Trace - 14:42:51] Received request 'textDocument/documentLink - (42)'.
Params: {"jsonrpc":"2.0","id":42,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:51] Received notification 'textDocument/didChange'.
Params: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","version":3},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":243,"character":0}},"rangeLength":5478,"text":"module hassclient\n\nimport time\nimport x.json2\nimport json\n\npub struct HassState {\n\tlast_changed_str string [json: 'last_changed']\n\tlast_updated_str string [json: 'last_updated']\npub:\n\tentity_id  string\n\tstate      string\n\tattributes map[string]json2.Any\npub mut:\n\tlast_updated time.Time\n\tlast_changed time.Time\n}\n\nfn parse_hass_state(json json2.Any) ?HassState {\n\tmut mp := json.as_map()\n\n\tmut state := HassState{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tstate: mp['state'] ?.str()\n\t\tattributes: mp['attributes'] ?.as_map()\n\t\tlast_changed_str: mp['last_changed'] ?.str()\n\t\tlast_updated_str: mp['last_updated'] ?.str()\n\t}\n\n\toffset := time.offset()\n\tlast_updated := time.parse_iso8601(state.last_updated_str) or { time.Time{} }\n\tstate.last_updated = last_updated.add_seconds(offset)\n\n\tlast_changed := time.parse_iso8601(state.last_changed_str) or { time.Time{} }\n\tstate.last_changed = last_changed.add_seconds(offset)\n\treturn state\n}\n\npub struct HassEventData {\npub:\n\tentity_id string\npub mut:\n\tnew_state HassState\n\told_state HassState\n}\n\nfn parse_hass_event_data(json json2.Any) ?HassEventData {\n\tmut mp := json.as_map()\n\treturn HassEventData{\n\t\tentity_id: mp['entity_id'] ?.str()\n\t\tnew_state: parse_hass_state(mp['new_state'] ?) ?\n\t\told_state: parse_hass_state(mp['old_state'] ?) ?\n\t}\n}\n\npub struct HassEvent {\npub:\n\tevent_type string\n\ttime_fired string\n\torigin     string\n\tcontext    Context\n}\n\npub struct Context {\n\tid        string\n\tparent_id string\n\tuser_id   string\n}\n\nfn parse_context(json json2.Any) ?Context {\n\tmut mp := json.as_map()\n\treturn Context{\n\t\tid: mp['id'] ?.str()\n\t\tparent_id: mp['parent_id'] ?.str()\n\t\tuser_id: mp['user_id'] ?.str()\n\t}\n}\n\npub struct HassStateChangedEvent {\npub mut:\n\ttime_fired string\n\tdata       HassEventData\n\tcontext    Context\n}\n\nfn parse_hass_state_changed_event(json json2.Any) ?HassStateChangedEvent {\n\tmut mp := json.as_map()\n\treturn HassStateChangedEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tdata: parse_hass_event_data(mp['data'] ?) ?\n\t\tcontext: parse_context(mp['context'] ?) ?\n\t}\n}\n\npub struct StateChangedEventMessage {\npub mut:\n\tid    int = -1\n\tevent HassStateChangedEvent\n}\n\nfn parse_hass_changed_event_message(json json2.Any) ?StateChangedEventMessage {\n\tmut mp := json.as_map()\n\treturn StateChangedEventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_state_changed_event(mp['event'] ?) ?\n\t}\n}\n\npub struct EventMessage {\npub mut:\n\tid    int = -1\n\tevent HassEvent\n}\n\nfn parse_hass_event_message(json json2.Any) ?EventMessage {\n\tmut mp := json.as_map()\n\treturn EventMessage{\n\t\tid: mp['id'] ?.int()\n\t\tevent: parse_hass_hass_event(mp['event'] ?) ?\n\t}\n}\n\nfn parse_hass_hass_event(json json2.Any) ?HassEvent {\n\tmut mp := json.as_map()\n\treturn HassEvent{\n\t\ttime_fired: mp['time_fired'] ?.str()\n\t\tevent_type: mp['event_type'] ?.str()\n\t}\n}\n\npub struct SubscribeToEventsMessage {\n\tmessage_type string [json: 'type'] = 'subscribe_events'\npub:\n\tid int\n}\n\nfn new_subscribe_events_message(id int) SubscribeToEventsMessage {\n\treturn SubscribeToEventsMessage{\n\t\tid: id\n\t}\n}\n\nfn (e SubscribeToEventsMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct AuthMessage {\n\tmessage_type string [json: 'type'] = 'auth'\npub:\n\taccess_token string\n}\n\nfn new_auth_message(token string) AuthMessage {\n\treturn AuthMessage{\n\t\taccess_token: token\n\t}\n}\n\nfn (e AuthMessage) encode_json() string {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['access_token'] = e.access_token\n\tjsn_any['type'] = e.message_type\n\treturn jsn_any.str()\n}\n\npub struct CallServiceMessage {\n\tmessage_type string [json: 'type'] = 'call_service'\npub:\n\tid           int\n\tdomain       string\n\tservice      string\n\tservice_data json2.Any\n\ttarget       Target\n}\n\nfn new_call_service_message(id int, domain string, service string, service_data json2.Any, target Target) CallServiceMessage {\n\treturn CallServiceMessage{\n\t\tid: id\n\t\tdomain: domain\n\t\tservice: service\n\t\tservice_data: service_data\n\t\ttarget: target\n\t}\n}\n\nfn (e CallServiceMessage) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tjsn_any['id'] = e.id\n\tjsn_any['type'] = e.message_type\n\tjsn_any['domain'] = e.domain\n\tjsn_any['service'] = e.service\n\tif e.service_data !is json2.Null {\n\t\tjsn_any['service_data'] = e.service_data\n\t}\n\tif e.target.entity_id.len > 0 || e.target.device_id.len > 0 || e.target.area_id.len > 0 {\n\t\tjsn_any['target'] = e.target.encode_json()\n\t}\n\n\treturn jsn_any\n}\n\npub struct Target {\n\tentity_id []string\n\tdevice_id []string\n\tarea_id   []string\n}\n\npub fn (e Target) encode_json() json2.Any {\n\tmut jsn_any := map[string]json2.Any{}\n\tif e.entity_id.len > 0 {\n\t\tif e.entity_id.len == 1 {\n\t\t\tjsn_any['entity_id'] = e.entity_id[0]\n\t\t} else {\n\t\t\tmut entities := e.entity_id.map(json2.Any(it))\n\n\t\t\tjsn_any['entity_id'] = entities\n\t\t}\n\t}\n\n\tif e.device_id.len > 0 {\n\t\tif e.device_id.len == 1 {\n\t\t\tjsn_any['device_id'] = e.device_id[0]\n\t\t} else {\n\t\t\tmut devices := e.device_id.map(json2.Any(it))\n\n\t\t\tjsn_any['device_id'] = devices\n\t\t}\n\t}\n\n\tif e.area_id.len > 0 {\n\t\tif e.area_id.len == 1 {\n\t\t\tjsn_any['area_id'] = e.area_id[0]\n\t\t} else {\n\t\t\tmut areas := e.area_id.map(json2.Any(it))\n\n\t\t\tjsn_any['area_id'] = areas\n\t\t}\n\t}\n\treturn jsn_any\n}\n"}]}}

[Trace - 14:42:51] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","diagnostics":[]}}

[Trace - 14:42:51] Sending notification 'textDocument/publishDiagnostics'.
Params: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","diagnostics":[]}}

[Trace - 14:42:51] Received request 'textDocument/foldingRange - (43)'.
Params: {"jsonrpc":"2.0","id":43,"method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:51] Sending response 'textDocument/foldingRange - (43)' took 0ms
Result: {"jsonrpc":"2.0","id":43,"result":[{"startLine":0,"startCharacter":0,"endLine":0,"endCharacter":17,"kind":"region"},{"startLine":0,"startCharacter":2,"endLine":2,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":3,"endLine":3,"endCharacter":14,"kind":"region"},{"startLine":0,"startCharacter":4,"endLine":4,"endCharacter":11,"kind":"region"},{"startLine":0,"startCharacter":6,"endLine":16,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":18,"endLine":36,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":38,"endLine":44,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":46,"endLine":53,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":55,"endLine":61,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":63,"endLine":67,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":69,"endLine":76,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":78,"endLine":83,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":85,"endLine":92,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":94,"endLine":98,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":100,"endLine":106,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":108,"endLine":112,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":114,"endLine":120,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":122,"endLine":128,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":130,"endLine":134,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":136,"endLine":140,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":142,"endLine":147,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":149,"endLine":153,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":155,"endLine":159,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":161,"endLine":166,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":168,"endLine":176,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":178,"endLine":186,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":188,"endLine":202,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":204,"endLine":208,"endCharacter":1,"kind":"region"},{"startLine":0,"startCharacter":210,"endLine":242,"endCharacter":1,"kind":"region"}]}

[Trace - 14:42:51] Received request 'textDocument/codeLens - (44)'.
Params: {"jsonrpc":"2.0","id":44,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:51] Received request 'textDocument/documentSymbol - (45)'.
Params: {"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v"}}}

[Trace - 14:42:51] Sending response 'textDocument/documentSymbol - (45)' took 0ms
Result: {"jsonrpc":"2.0","id":45,"result":[{"name":"HassState","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":6,"character":11},"end":{"line":6,"character":20}}},"containerName":""},{"name":"parse_hass_state","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":18,"character":3},"end":{"line":18,"character":19}}},"containerName":""},{"name":"HassEventData","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":38,"character":11},"end":{"line":38,"character":24}}},"containerName":""},{"name":"parse_hass_event_data","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":46,"character":3},"end":{"line":46,"character":24}}},"containerName":""},{"name":"Context","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":63,"character":11},"end":{"line":63,"character":18}}},"containerName":""},{"name":"HassEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":20}}},"containerName":""},{"name":"parse_context","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":69,"character":3},"end":{"line":69,"character":16}}},"containerName":""},{"name":"HassStateChangedEvent","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":78,"character":11},"end":{"line":78,"character":32}}},"containerName":""},{"name":"parse_hass_state_changed_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":85,"character":3},"end":{"line":85,"character":33}}},"containerName":""},{"name":"StateChangedEventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":94,"character":11},"end":{"line":94,"character":35}}},"containerName":""},{"name":"parse_hass_changed_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":100,"character":3},"end":{"line":100,"character":35}}},"containerName":""},{"name":"EventMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":23}}},"containerName":""},{"name":"parse_hass_event_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":114,"character":3},"end":{"line":114,"character":27}}},"containerName":""},{"name":"parse_hass_hass_event","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":122,"character":3},"end":{"line":122,"character":24}}},"containerName":""},{"name":"SubscribeToEventsMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":130,"character":11},"end":{"line":130,"character":35}}},"containerName":""},{"name":"e.encode_json","kind":6,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":142,"character":32},"end":{"line":142,"character":43}}},"containerName":""},{"name":"new_subscribe_events_message","kind":12,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclient/messages.v","range":{"start":{"line":136,"character":3},"end":{"line":136,"character":31}}},"containerName":""},{"name":"AuthMessage","kind":23,"deprecated":false,"location":{"uri":"file:///workspaces/v-hassclient/hassclie